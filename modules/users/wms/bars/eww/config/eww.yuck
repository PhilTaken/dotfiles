;; Created   by https://github.com/rxyhn
;; Designed  by https://github.com/rxyhn
;; Maintaned by https://github.com/rxyhn

;; put path to aesthetic bar config files here ;;
;; (defvar eww "$HOME/.local/bin/eww -c $HOME/.config/eww/bar")

(defvar amixer "@amixer@")
(defvar eww "@eww@")
(defvar brightnessctl "@brightnessctl@")
(defvar date "@date@")
(defvar reload-wm '@reload_wm@')
(defvar quit-wm "@quit_wm@")
(defvar lock-wm "@lock_wm@ &")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                          Widget Section's                             ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Launcher Widgets ;;
(defpoll current-volume :interval "1s" "@amixer@ sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%'")
(defpoll battery            :interval "1s"  "scripts/battery icon")
(defpoll battery-cappacity  :interval "1s"  "scripts/battery percent")
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")
(defpoll current-brightness :interval "1s" "@brightnessctl@ -m | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")
(defpoll hour   :interval "1s"  "date '+%H'")
(defpoll min    :interval "1s"  "date '+%M'")
(defpoll calendar_day :interval "10h" "date '+%d'")
(defpoll calendar_month :interval "10h" "scripts/calendar")
(defpoll calendar_year :interval "10h" "date '+%Y'")

(defpoll current-cpu :interval "1s" "@mpstat@ -o JSON | @jq@ '100 - .sysstat.hosts[0].statistics[0].\"cpu-load\"[0].idle'")
(defpoll current-ram :interval "1s" "@brightnessctl@ -m | awk -F, '{print substr($4, 0, length($4)-1)}' | tr -d '%'")


(defwidget launcher []
  (box :orientation "v"
       :space-evenly "false"
        :spacing -15
        (button :class "launcher_icon"
       :onclick "scripts/popup launcher" "ﲽ")))

;; Workspaces Widgets ;;
(deflisten workspace "scripts/workspace")
(defwidget workspaces []
  (literal :content workspace))

;; Battery Widgets ;;
(defwidget bat []
  (box    :orientation "v"
          :space-evenly "false"
    (label  :class "bat"
            :halign "end"
            :text battery
            :tooltip "Battery: ${battery-cappacity}%")))

;; Wifi Widgets ;;
(defwidget wifi []
  (box        :orientation "v"
              :tooltip wifi-name
    (button   :class "wifi-icon" wifi-icon)))

;; Brightness Widgets ;;
(defwidget bright []
  (eventbox :onhover "${eww} update bright=true"
            :onhoverlost "${eww} update bright=false"
    (box    :orientation "v"
            :space-evenly "false"
            :spacing 2
      (revealer :transition "slideup"
                :reveal bright
                :duration "550ms"
        (scale :class "bribar"
               :value current-brightness
               :tooltip "Brightness: ${current-brightness}%"
               :onchange "${brightnessctl} set {}%"
               :orientation "v"
               :flipped true
               :max 101
               :min 0))
      (label :class "brightness-icon"
             :text ""))))
(defvar bright false)

;; Volume Widgets ;;
(defwidget volum []
  (eventbox :onhover "${eww} update volum=true"
            :onhoverlost "${eww} update volum=false"
    (box      :orientation "v"
              :space-evenly "false"
              :spacing "2"
      (revealer :transition "slideup"
                :reveal volum
                :duration "550ms"
        (scale    :class "volbar"
                  :value current-volume
                  :orientation "v"
                  :flipped true
                  :tooltip "Volume: ${current-volume}%"
                  :max 101
                  :min 0
                  :onchange "${amixer} sset Master {}%" ))
      (button   :onclick "scripts/popup audio"   :class "volume-icon" ""))))
(defvar volum false)

;; Control Panel Widgets ;;
(defwidget control []
  (box :orientation "v"
       :space-evenly false
       :class "control"
    (bat)
    (wifi)
    (bright)
    (volum)))

;; Clock Widgets ;;
(defwidget time []
  (box    :orientation "v"
          :class "time"
          :valign "end"
    (button :onclick "scripts/popup calendar"
            :class "time-hour" hour)
    (button :onclick "scripts/popup calendar"
            :class "time-min"  min)))

;; Calendar Widgets ;;
(defwidget cal []
  (box :class "cal-box"
       :orientation "v"
    (box :class "cal-inner-box"
      (calendar :class "cal"
                :day calendar_day
                :month calendar_month
                :year calendar_year))))

(defwidget sysinfo []
  (box :class "sysinfo"
       :orientation "v"
    (box :class "sysinfo-inner-box"
      :orientation "h"
      (scale 
        ;:class "usage-ram"
        :class "volbar"
        :active false
        :visible true
        :value '${EWW_RAM.used_mem_perc}'
        :tooltip "RAM usage ${EWW_RAM.used_mem_perc}%"
        :orientation "v"
        :flipped true
        :round-digits 2
        :max 101
        :min 0)
      (scale 
        ;:class "usage-cpu"
        :class "bribar"
        :active false
        :visible true
        :value '${EWW_CPU.avg}'
        :tooltip "CPU usage ${EWW_CPU.avg}%"
        :orientation "v"
        :flipped true
        :round-digits 2
        :max 101
        :min 0))))

;; Powermenu Widgets ;;
(defwidget power []
  (eventbox   :onhover "${eww} update power=true"
              :onhoverlost "${eww} update power=false"
    (box        :orientation "v"
                :space-evenly "false"
                :vexpand "false"
                :class "powermenu"
      (revealer   :transition "slideup"
                  :reveal power
                  :duration "550ms"
        (box        :orientation "v"
                    :space-evenly "false"

          (button     :class "button-bspres"
                      :tooltip "Restart WM"
                      :onclick reload-wm "勒" )

          (button     :class "button-reb"
                      :tooltip "Reboot"
                      :onclick "reboot"   "ﰇ")

          (button     :class "button-quit"
                      :tooltip "Logout"
                      :onclick quit-wm "")

          (button     :class "button-lock"
                      :tooltip "Lock Screen"
                      :onclick "${eww} update power=false && ${lock-wm}" "")))

      (button     :class "button-off"
                  :tooltip "Shutdown"
                  :onclick "shutdown now" ""))))

(defvar power false)

;; Top Widgets ;;
(defwidget top []
  (box    :orientation "v"
          :space-evenly "false"
          :valign "start"
    (launcher)
    (workspaces)))

;; Bottom Widgets ;;
(defwidget bottom []
  (box    :orientation "v"
          :space-evenly false
    (time)
    (power)))

;; End Widgets ;;
(defwidget end []
  (box :orientation "v"
       :space-evenly "false"
       :valign "end"
       :spacing 5
    (control)
    (sysinfo)
    (bottom)))

;; Bar Widgets ;;
(defwidget bar []
  (box :class "eww_bar"
       :orientation "v"
       :vexpand "false"
       :hexpand "false"
    (top)
    (end)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                          Window Sections                             ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Bar Windows ;;
(defwindow bar
  :geometry (geometry
    :x "0"
    :y "0"
    :height "100%"
    :anchor "left center"
    :width "47px")
  :monitor @main_monitor@
  :reserve (struts :distance "35px" :side "left")
  :wm-ignore false
  :exclusive "true"
  :hexpand "false"
  :vexpand "false"
  :space-evenly: false
  (bar))

;; Calendar Windows ;;
(defwindow calendar
  :monitor @main_monitor@
  :wm-ignore false
  :geometry (geometry
    :x "70px"
    :y "65%"
    :width "270px"
    :height "60px")
  (cal))
