(defwidget user []
  (box :class "userinfobox"
       :orientation "h"
       :space-evenly true
    (box :class "info"
         :space-evenly false
         :orientation "h"
         :halign "start"
         :valign "center"
         :spacing 10
      (label :text "${username}" :class "username"))
    
    (box :class "useractions"
         :space-evenly false
         :orientation "h"
         :halign "end"
         :valign "center"
      (button     :class "poweroff"
                  :tooltip "Power Off"
                  :onclick "poweroff" "")
      (button     :class "reboot"
                  :tooltip "Reboot"
                  :onclick "reboot" "ﰇ")
      (button     :class "lock"
                  :tooltip "Lock Screen"
                  :onclick lock-wm "")
      (button     :class "logout"
                  :tooltip "Logout"
                  :onclick quit-wm ""))))


(defwidget sysbuttons []
  (box :class "sysbuttonsbox"
       :orientation "v"
       :space-evenly false
       :spacing 8
    (box :class "firstrow"
         :orientation "h"
         :space-evenly true
         :spacing 8
      (box :halign "start"
           :orientation "h"
           :space-evenly true
        (sysblock 
         :icon "${network_icon}"
         :onclick "networkmanager_dmenu"
         :active "${network_status == 'Connected' ? true : false}"
         :label "${network_ssid}"))
        
      
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${bluetooth_state == 'on' ? '' : ''}"
                  :onclick "scripts/bluetooth.sh toggle"
                  :active "${bluetooth_state == 'on' ? true : false}"
                  :label "Bluetooth")))
      
    
    (box :class "lastrow"
         :orientation "h"
         :space-evenly true
      (box :halign "start"
           :orientation "h"
           :space-evenly true
        ;; TODO: replace with vpn / do not disturb / camera
        (sysblock :icon "${redshift_state == 'on' ? '' : ''}"
                  :onclick "scripts/redshift toggle"
                  :active "${redshift_state == 'on' ? true : false}"
                  :label "Night Light"))
      
      (box :halign "end"
           :orientation "h"
           :space-evenly true
        (sysblock :icon "${mic_status == 'yes' ? '' : ''}"
                  :label "Micro"
                  :onclick "scripts/mic toggle"
                  :active "${mic_status == 'yes' ? true : false}")))))

(defwidget sysblock [icon onclick active label]
  (box :class "block-container"
       :orientation "h"
       :space-evenly true
       :spacing 1
    (button :class "block ${active ? 'active' : ''}" :onclick "${onclick}"
      (box :orientation "h"
            :spacing 1
           :valign "start"
           :space-evenly false
            (box :class "iconbox"
                 :halign "start"
                 :valign "center"
                 :space-evenly true
                 :orientation "h"
              (label :text "${icon}" :class "icon"))
            
            (box :class "labelbox"
                 :halign "start"
                 :valign "start"
                 :orientation "v"
              (label :halign "center" :text "${label}" :class "label")
              (label :halign "start" :text "${active ? 'On' : 'Off'}" :class "label__status"))
           
        (box :class "chevronbox"
             :halign "end"
             :hexpand true
             :valign "center"
             :space-evenly false
             :orientation "h"
          (label :halign "end" :text ""))))))

(defwidget music [title artist cover player]
  (box :class "musicbox"
       :orientation "v"
       :style "background: radial-gradient(circle, rgba(0, 0, 0, 0.4) 30%, ${pctl_sub['image_accent']}), url(\"${pctl_sub['mpris:artUrl']}\"); background-size: cover; background-position: center;"
   (box :class "musicbox__top"
        :halign "start"
        :valign "start"
        :style "color: ${pctl_sub['button_accent']};"
        :tooltip "${player}"
        "${player == 'spotify' ? '' : '爵' }")
   (box :class "musicbox__center"
        :orientation "h"
        :space-evenly false
        (box :class "musicbox__center--metadata"
             :orientation "v"
             :halign "start"
             :valign "center"
             :hexpand true
             (label :limit-width 25 :halign "start" :text title :class "title" :tooltip title)
             (label :limit-width 25 :halign "start" :text artist :class "artist" :tooltip artist))
        (button :class "pausebutton ${music_status == 'Playing' ? 'playing' : 'paused'}"
                :halign "end"
                :style "background-color: ${pctl_sub['button_accent']}; color: ${pctl_sub['button_text']};"
                :onclick "playerctl play-pause"
                "${music_status == 'Playing' ? '' : ''}"))
       
   (box :class "musicbox__bottom"
                :style "color: ${pctl_sub['button_accent']};"
        (button :valign "end"
                :halign "start"
                :onclick "playerctl prev"
                :class "previousbutton"
                "玲")
       
        (button :valign "end"
                :halign "end"
                :onclick "playerctl next"
                :class "nextbutton"
                "怜"))))

(defwidget controls []
  (box :class "controlsbox"
       :orientation "v"
       :space-evenly false
       :spacing 16
    (box :orientation "h"
         :space-evenly "false"
         :class "slider active"
      (box :class "label"
            volume_icon)
      
      (scale :value volume_value
             :hexpand true
             :onchange "scripts/volume.sh set {}"
             :min 0
             :max 101)
      (box :class "scale-label"
           "${volume_value}%"))
    
    (box :orientation "h"
         :space-evenly "false"
         :class "slider active"
         :visible br-enabled
      (box :class "label"
            br_icon)
      
      (scale 
             :hexpand true
             :value br
             :onchange "brightnessctl set {}%"
             :min 0
             :max 101)
      (box :class "scale-label"
             :halign "start"
           "${br}%"))
    
    (box :class "slider"
         :orientation "h"
         :space-evenly "false"
      (box :class "label"
            "")
      (scale :value '${EWW_RAM.used_mem_perc}'
             :hexpand true
             :active false
             :min 0
             :max 101)
      (box :class "scale-label "
           "${EWW_RAM.used_mem_perc}%"))
           
    
    (box :class "slider"
         :orientation "h"
         :space-evenly "false"
      (box :class "label"
           "")
      (scale :value '${EWW_CPU.avg}'
             :hexpand true
             :active false
             :min 0
             :max 101)
      (box :class "scale-label"
           "${EWW_CPU.avg}%"))))
    

(defwidget actions []
  (box :class "actions"
       :orientation "v"
       :space-evenly false
       :spacing 10
    (user)
    (sysbuttons)
    (music :album {pctl_sub["xesam:album"]}
           :title {pctl_sub["xesam:title"]}
           :image_accent {pctl_sub["image_accent"]}
           :button_accent {pctl_sub["button_accent"]}
           :button_text {pctl_sub["button_text"]}
           :cover {pctl_sub["mpris:artUrl"]}
           :artist {pctl_sub["xesam:artist"]}
           :player "${pctl_sub.player}")
    (controls)))



(defwindow actions
  :geometry (geometry :x "20px"
                      :anchor "left center")
  :monitor 0
  :stacking "fg"
  ;:type "dock"
  ;:wm-ignore true
  (actions))


(defwidget closer [window]
  (eventbox :onclick "eww close ${window} && eww close ${window}-closer"))
 
(defwindow actions-closer
  :geometry (geometry :width "100%" :height "100%")
  :monitor 0
  :stacking "fg"
  :focusable false
  (closer :window "actions"))
